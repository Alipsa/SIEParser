/*
 * Gradle 3.2.1 build script
 *
 */

def releaseVersion = '1.0'
//def releaseVersion = '1.1-SNAPSHOT'

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven-publish'

def defaultEncoding = 'UTF-8'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.deprecation = true
    options.compilerArgs << "-Xlint:unchecked"
    //options.encoding = defaultEncoding
}

[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

//tasks.withType(JavaCompile) {
//    options.encoding = defaultEncoding
//}

// declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

task myJavadocs(type: Javadoc) {
    classpath = configurations.compile
    source = sourceSets.main.allJava
    exclude '**/org/slf4j/**'
}

task packageJavadoc(type: Jar, dependsOn: 'myJavadocs') {
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

def pomConfig = {
    name 'SIEParser'
    packaging 'jar'
    description 'A Java parser for SIE files that can read files of version 1 to 4 (including 4i)'
    url 'http://github.com/perNyfelt/SIEParser'

    organization {
        name 'Alipsa HB'
        url 'http://www.alipsa.se'
    }
    issueManagement {
        system 'github'
        url 'http://github.com/perNyfelt/SIEParser/issues'
    }

    scm {
        url 'http://github.com/perNyfelt/SIEParser'
        connection '"scm:git:http://github.com/perNyfelt/SIEParser.git'
        developerConnection 'scm:git:git@github.com:perNyfelt/SIEParser.git'
    }
    licenses {
        license {
            name 'MIT License'
            url 'http://opensource.org/licenses/MIT'
        }
    }
    developers {
        developer {
            id 'perNyfelt'
            name 'Per Nyfelt'
            organization 'Alipsa HB'
            organizationUrl 'http://www.alipsa.se'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.github.pernyfelt.sieparser'
            artifactId 'SieParser'
            version releaseVersion

            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            artifact packageJavadoc {
                classifier = 'javadoc'
            }

            pom.withXml {
                asNode().children().last() + pomConfig
            }
        }
    }
}

publishing {

    def repoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    if(releaseVersion.endsWith('-SNAPSHOT')) {
        repoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }

    repositories {
        maven {
            //url '$buildDir/repo'
            url repoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }

        }
    }
}

